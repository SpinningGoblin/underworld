/* tslint:disable */
/* eslint-disable */
/**
 * Underworld
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EffectsView,
    EffectsViewFromJSON,
    EffectsViewFromJSONTyped,
    EffectsViewToJSON,
} from './EffectsView';
import {
    Inventory,
    InventoryFromJSON,
    InventoryFromJSONTyped,
    InventoryToJSON,
} from './Inventory';
import {
    LifeModifier,
    LifeModifierFromJSON,
    LifeModifierFromJSONTyped,
    LifeModifierToJSON,
} from './LifeModifier';
import {
    Species,
    SpeciesFromJSON,
    SpeciesFromJSONTyped,
    SpeciesToJSON,
} from './Species';
import {
    SpellMemory,
    SpellMemoryFromJSON,
    SpellMemoryFromJSONTyped,
    SpellMemoryToJSON,
} from './SpellMemory';
import {
    Stats,
    StatsFromJSON,
    StatsFromJSONTyped,
    StatsToJSON,
} from './Stats';

/**
 * 
 * @export
 * @interface Character
 */
export interface Character {
    /**
     * 
     * @type {Stats}
     * @memberof Character
     */
    stats: Stats;
    /**
     * 
     * @type {Species}
     * @memberof Character
     */
    species?: Species;
    /**
     * 
     * @type {boolean}
     * @memberof Character
     */
    speciesKnown: boolean;
    /**
     * 
     * @type {LifeModifier}
     * @memberof Character
     */
    lifeModifier?: LifeModifier;
    /**
     * 
     * @type {boolean}
     * @memberof Character
     */
    lifeModifierKnown: boolean;
    /**
     * 
     * @type {Inventory}
     * @memberof Character
     */
    inventory?: Inventory;
    /**
     * 
     * @type {boolean}
     * @memberof Character
     */
    inventoryKnown: boolean;
    /**
     * 
     * @type {EffectsView}
     * @memberof Character
     */
    currentEffects?: EffectsView;
    /**
     * 
     * @type {boolean}
     * @memberof Character
     */
    currentEffectsKnown: boolean;
    /**
     * 
     * @type {SpellMemory}
     * @memberof Character
     */
    spellMemory?: SpellMemory;
    /**
     * 
     * @type {boolean}
     * @memberof Character
     */
    spellMemoryKnown: boolean;
}

export function CharacterFromJSON(json: any): Character {
    return CharacterFromJSONTyped(json, false);
}

export function CharacterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Character {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stats': StatsFromJSON(json['stats']),
        'species': !exists(json, 'species') ? undefined : SpeciesFromJSON(json['species']),
        'speciesKnown': json['species_known'],
        'lifeModifier': !exists(json, 'life_modifier') ? undefined : LifeModifierFromJSON(json['life_modifier']),
        'lifeModifierKnown': json['life_modifier_known'],
        'inventory': !exists(json, 'inventory') ? undefined : InventoryFromJSON(json['inventory']),
        'inventoryKnown': json['inventory_known'],
        'currentEffects': !exists(json, 'current_effects') ? undefined : EffectsViewFromJSON(json['current_effects']),
        'currentEffectsKnown': json['current_effects_known'],
        'spellMemory': !exists(json, 'spell_memory') ? undefined : SpellMemoryFromJSON(json['spell_memory']),
        'spellMemoryKnown': json['spell_memory_known'],
    };
}

export function CharacterToJSON(value?: Character | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stats': StatsToJSON(value.stats),
        'species': SpeciesToJSON(value.species),
        'species_known': value.speciesKnown,
        'life_modifier': LifeModifierToJSON(value.lifeModifier),
        'life_modifier_known': value.lifeModifierKnown,
        'inventory': InventoryToJSON(value.inventory),
        'inventory_known': value.inventoryKnown,
        'current_effects': EffectsViewToJSON(value.currentEffects),
        'current_effects_known': value.currentEffectsKnown,
        'spell_memory': SpellMemoryToJSON(value.spellMemory),
        'spell_memory_known': value.spellMemoryKnown,
    };
}

